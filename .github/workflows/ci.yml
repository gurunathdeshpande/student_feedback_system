name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Root Dependencies
      run: npm ci || npm install
        
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci || npm install
        
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci || npm install
        
    - name: Run Frontend Tests
      working-directory: ./frontend
      run: |
        npm run test:coverage
        
    - name: Run Backend Tests
      working-directory: ./backend
      run: |
        npm run test:coverage
        
    - name: Run Frontend Lint
      working-directory: ./frontend
      run: npm run lint
        
    - name: Run Backend Lint
      working-directory: ./backend
      run: npm run lint
        
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

  docker:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build and test Docker images
      run: |
        docker-compose build
        docker-compose up -d
        docker-compose ps
        sleep 30
        docker-compose down
        
    - name: Push Docker images
      if: success()
      run: |
        docker-compose push 