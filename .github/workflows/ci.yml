name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: |
        npm run install-all
        
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm run test -- --watchAll=false
        
    - name: Run Backend Tests
      run: |
        cd backend
        npm run test
        
    - name: Run ESLint
      run: |
        cd frontend
        npm run lint
        cd ../backend
        npm run lint
        
    - name: Check Frontend Build
      run: |
        cd frontend
        npm run build
        
    - name: Security Audit
      run: |
        npm audit
        cd frontend && npm audit
        cd ../backend && npm audit

  docker:
    needs: test-and-build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and test Docker images
      run: |
        docker-compose build
        docker-compose up -d
        docker-compose ps
        sleep 30
        docker-compose down 